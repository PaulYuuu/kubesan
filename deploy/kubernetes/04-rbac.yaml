# SPDX-License-Identifier: Apache-2.0

# used by package pkg/kubesan/blobs
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-blobs
rules:
  - apiGroups: [""]
    resources: [persistentvolumes]
    verbs: [get, update]
  - apiGroups: [""]
    resources: [services]
    verbs: [create, delete]
  - apiGroups: [apps]
    resources: [replicasets]
    verbs: [create, delete, get]
  - apiGroups: [batch]
    resources: [jobs]
    verbs: [create, delete, get]
  - apiGroups: [storage.k8s.io]
    resources: [storageclasses]
    verbs: [get, update]
  - apiGroups: [kubesan.gitlab.io]
    resources: [blobpools]
    verbs: [create, delete, get, update]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-blobs
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-blobs
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan
  - kind: ServiceAccount
    name: csi-node-plugin
    namespace: kubesan

---

# used by package pkg/kubesan/csi/controller
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-controller
rules:
  - apiGroups: [""]
    resources: [persistentvolumeclaims]
    verbs: [get]
  - apiGroups: [batch]
    resources: [jobs]
    verbs: [create, delete, get]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-csi-controller
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan

---

# used by image registry.k8s.io/sig-storage/csi-provisioner
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-provisioner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-provisioner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-csi-provisioner
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan

---

# used by image registry.k8s.io/sig-storage/csi-snapshotter
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-snapshotter
rules:
  - apiGroups: [""]
    resources: [events]
    verbs: [list, watch, create, update, patch]
  - apiGroups: [snapshot.storage.k8s.io]
    resources: [volumesnapshotclasses]
    verbs: [get, list, watch]
  - apiGroups: [snapshot.storage.k8s.io]
    resources: [volumesnapshotcontents]
    verbs: [get, list, watch, update, patch]
  - apiGroups: [snapshot.storage.k8s.io]
    resources: [volumesnapshotcontents/status]
    verbs: [update, patch]

---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubesan-csi-snapshotter
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubesan-csi-snapshotter
subjects:
  - kind: ServiceAccount
    name: csi-controller-plugin
    namespace: kubesan
